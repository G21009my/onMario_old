DRを分別する
予測座標を表示する関数を追加
オブジェクトデータをもう少しいい感じにする
色の変更をプレイヤ依存に変更
部屋作りたい
デバッグ用の予測機能をオブジェクトにする

スラスターを二人で操作して

acvの操作感を2dにしたやつ？
撃つ側と避ける側に分ける
撃つ側
・装弾数があり撃ち切るとゲーム終了
・弾速が設定されており着弾時間がどうとか
    ・1拍置くか置かないかくらいで着弾。感覚的にはスナキャに近い
    ・マウス操作にするか旋回性能に縛られる方向にするか
・撃たれる側までの向かっての距離を俯瞰する視点が画面端に存在？
避ける側
・撃つ側から見て上下左右に動く
    ・Z軸の動きはナシ
・ジャンプとブーストのオンオフ、ハイブーストが存在
    ・ハイブには溜めがあるので弾を見てから避けるのは無理
    ・ハイブはゴリゴリの慣性移動になるので予測しやすい
    ・ハイブのエネルギーが不足状態でハイブすると加速時間が0になる
・通常ブーストには加速時間が存在
    ・加速しきるまでは遅かったり切り返しで慣性に引きずられたりする
    ・加速型と高出力型で分ける？
・ブーストドライブは実装する？
    ・するのならBDは勢いを通常ブーストでは殺しきれない仕様に
    ・しないなら登れる地形もいくつか
・グラブは実装しない
撃つ側と撃たれる側のパラメータのズレ（特に座標）を見る
・撃つ側のパラメータ上は当てられているのに撃たれる側のパラメータ上は被弾していない場合はラグがあると判定
・予測も実装し、
    ・慣性が乗っている場合の、どれくらい慣性が乗っているかで判定の齟齬が「いい感じ」になるかを探る

仕様
ブースト関連のパラメータ
    ・推力
    ・加速力
    ・現在速度
    ・通常ブースト最大速度
    ・初動燃焼率
    ・最大加速到達時間

切り返しの処理はどうする
あまり複雑にしても仕方がないので、できる限り簡単に
・
・切り返しの強さにパラメータを割り当ててその強さを参照した減速？
・最大推力 < 最大速度にすれば慣性を再現できるね→多分コレでいけるかも

HB→通常ブーストへの減速はどうしようか
・推力を二つ用意する？
    ・HBとNBの速いほうを優先する
・


慣性移動は予測しやすい
慣性の強さと遅延の強さの関係
気持ち悪い
突飛な動きができるゲームとできないゲームとの比較

powerVector
power
nowVector
nowThrust
